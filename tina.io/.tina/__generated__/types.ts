//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getPageDocument: PageDocument;
  getPageList: PageConnection;
  getPostDocument: PostDocument;
  getPostList: PostConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Float']>;
  last?: Maybe<Scalars['Float']>;
  sort?: Maybe<Scalars['String']>;
};


export type QueryGetPageDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetPageListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Float']>;
  last?: Maybe<Scalars['Float']>;
  sort?: Maybe<Scalars['String']>;
};


export type QueryGetPostDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetPostListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Float']>;
  last?: Maybe<Scalars['Float']>;
  sort?: Maybe<Scalars['String']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Float']>;
  last?: Maybe<Scalars['Float']>;
  sort?: Maybe<Scalars['String']>;
};

export type DocumentNode = PageDocument | PostDocument;

export type PageSeo = {
  __typename?: 'PageSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
  videoSrc?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMedia = {
  __typename?: 'PageBlocksFeaturesItemsFeatureMedia';
  src?: Maybe<Scalars['String']>;
  videoSrc?: Maybe<Scalars['String']>;
  cli?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActions = {
  __typename?: 'PageBlocksFeaturesItemsFeatureActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeature = {
  __typename?: 'PageBlocksFeaturesItemsFeature';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  media?: Maybe<PageBlocksFeaturesItemsFeatureMedia>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsFeatureActions>>>;
};

export type PageBlocksFeaturesItems = PageBlocksFeaturesItemsFeature;

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
};

export type PageBlocksFlyingActions = {
  __typename?: 'PageBlocksFlyingActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFlying = {
  __typename?: 'PageBlocksFlying';
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFlyingActions>>>;
};

export type PageBlocksPricingTierOneActions = {
  __typename?: 'PageBlocksPricingTierOneActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierOne = {
  __typename?: 'PageBlocksPricingTierOne';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierOneActions>>>;
};

export type PageBlocksPricingTierTwoActions = {
  __typename?: 'PageBlocksPricingTierTwoActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierTwo = {
  __typename?: 'PageBlocksPricingTierTwo';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierTwoActions>>>;
};

export type PageBlocksPricingTierThreeActions = {
  __typename?: 'PageBlocksPricingTierThreeActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierThree = {
  __typename?: 'PageBlocksPricingTierThree';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierThreeActions>>>;
};

export type PageBlocksPricingTierFourActions = {
  __typename?: 'PageBlocksPricingTierFourActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierFour = {
  __typename?: 'PageBlocksPricingTierFour';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierFourActions>>>;
};

export type PageBlocksPricing = {
  __typename?: 'PageBlocksPricing';
  intro?: Maybe<Scalars['JSON']>;
  tierOne?: Maybe<PageBlocksPricingTierOne>;
  segue?: Maybe<Scalars['JSON']>;
  tierTwo?: Maybe<PageBlocksPricingTierTwo>;
  tierThree?: Maybe<PageBlocksPricingTierThree>;
  tierFour?: Maybe<PageBlocksPricingTierFour>;
};

export type PageBlocksFaqQuestions = {
  __typename?: 'PageBlocksFaqQuestions';
  question?: Maybe<Scalars['String']>;
  answer?: Maybe<Scalars['JSON']>;
};

export type PageBlocksFaq = {
  __typename?: 'PageBlocksFaq';
  title?: Maybe<Scalars['String']>;
  intro?: Maybe<Scalars['JSON']>;
  questions?: Maybe<Array<Maybe<PageBlocksFaqQuestions>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksContentOptions = {
  __typename?: 'PageBlocksContentOptions';
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksContent = {
  __typename?: 'PageBlocksContent';
  options?: Maybe<PageBlocksContentOptions>;
  content?: Maybe<Scalars['JSON']>;
};

export type PageBlocksColumnsOptions = {
  __typename?: 'PageBlocksColumnsOptions';
  columns?: Maybe<Scalars['String']>;
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksColumns = {
  __typename?: 'PageBlocksColumns';
  options?: Maybe<PageBlocksColumnsOptions>;
  columnOne?: Maybe<Scalars['JSON']>;
  columnTwo?: Maybe<Scalars['JSON']>;
};

export type PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksFlying | PageBlocksPricing | PageBlocksFaq | PageBlocksContent | PageBlocksColumns;

export type Page = {
  __typename?: 'Page';
  seo?: Maybe<PageSeo>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
};

export type PageDocument = Node & Document & {
  __typename?: 'PageDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Page;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PageDocument>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type PostPrevDocument = PostDocument;

export type PostNextDocument = PostDocument;

export type Post = {
  __typename?: 'Post';
  title?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  prev?: Maybe<PostPrevDocument>;
  next?: Maybe<PostNextDocument>;
  body?: Maybe<Scalars['JSON']>;
};

export type PostDocument = Node & Document & {
  __typename?: 'PostDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Post;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PostDocument>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePageDocument: PageDocument;
  createPageDocument: PageDocument;
  updatePostDocument: PostDocument;
  createPostDocument: PostDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdatePostDocumentArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostDocumentArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};

export type DocumentMutation = {
  page?: Maybe<PageMutation>;
  post?: Maybe<PostMutation>;
};

export type PageSeoMutation = {
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActionsMutation>>>;
  videoSrc?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMediaMutation = {
  src?: Maybe<Scalars['String']>;
  videoSrc?: Maybe<Scalars['String']>;
  cli?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMutation = {
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  media?: Maybe<PageBlocksFeaturesItemsFeatureMediaMutation>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsFeatureActionsMutation>>>;
};

export type PageBlocksFeaturesItemsMutation = {
  feature?: Maybe<PageBlocksFeaturesItemsFeatureMutation>;
};

export type PageBlocksFeaturesMutation = {
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItemsMutation>>>;
};

export type PageBlocksFlyingActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFlyingMutation = {
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFlyingActionsMutation>>>;
};

export type PageBlocksPricingTierOneActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierOneMutation = {
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierOneActionsMutation>>>;
};

export type PageBlocksPricingTierTwoActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierTwoMutation = {
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierTwoActionsMutation>>>;
};

export type PageBlocksPricingTierThreeActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierThreeMutation = {
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierThreeActionsMutation>>>;
};

export type PageBlocksPricingTierFourActionsMutation = {
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksPricingTierFourMutation = {
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  interval?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  large?: Maybe<Scalars['Boolean']>;
  actions?: Maybe<Array<Maybe<PageBlocksPricingTierFourActionsMutation>>>;
};

export type PageBlocksPricingMutation = {
  intro?: Maybe<Scalars['JSON']>;
  tierOne?: Maybe<PageBlocksPricingTierOneMutation>;
  segue?: Maybe<Scalars['JSON']>;
  tierTwo?: Maybe<PageBlocksPricingTierTwoMutation>;
  tierThree?: Maybe<PageBlocksPricingTierThreeMutation>;
  tierFour?: Maybe<PageBlocksPricingTierFourMutation>;
};

export type PageBlocksFaqQuestionsMutation = {
  question?: Maybe<Scalars['String']>;
  answer?: Maybe<Scalars['JSON']>;
};

export type PageBlocksFaqMutation = {
  title?: Maybe<Scalars['String']>;
  intro?: Maybe<Scalars['JSON']>;
  questions?: Maybe<Array<Maybe<PageBlocksFaqQuestionsMutation>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksContentOptionsMutation = {
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksContentMutation = {
  options?: Maybe<PageBlocksContentOptionsMutation>;
  content?: Maybe<Scalars['JSON']>;
};

export type PageBlocksColumnsOptionsMutation = {
  columns?: Maybe<Scalars['String']>;
  narrow?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  align?: Maybe<Scalars['String']>;
};

export type PageBlocksColumnsMutation = {
  options?: Maybe<PageBlocksColumnsOptionsMutation>;
  columnOne?: Maybe<Scalars['JSON']>;
  columnTwo?: Maybe<Scalars['JSON']>;
};

export type PageBlocksMutation = {
  hero?: Maybe<PageBlocksHeroMutation>;
  features?: Maybe<PageBlocksFeaturesMutation>;
  flying?: Maybe<PageBlocksFlyingMutation>;
  pricing?: Maybe<PageBlocksPricingMutation>;
  faq?: Maybe<PageBlocksFaqMutation>;
  content?: Maybe<PageBlocksContentMutation>;
  columns?: Maybe<PageBlocksColumnsMutation>;
};

export type PageMutation = {
  seo?: Maybe<PageSeoMutation>;
  blocks?: Maybe<Array<Maybe<PageBlocksMutation>>>;
};

export type PostMutation = {
  title?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  prev?: Maybe<Scalars['String']>;
  next?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
};

export type GetExpandedPostDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetExpandedPostDocumentQuery = { __typename?: 'Query', getPostDocument: { __typename?: 'PostDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Post', title?: Maybe<string>, date?: Maybe<string>, last_edited?: Maybe<string>, author?: Maybe<string>, body?: Maybe<any>, prev?: Maybe<{ __typename?: 'PostDocument', id: string, data: { __typename?: 'Post', title?: Maybe<string> } }>, next?: Maybe<{ __typename?: 'PostDocument', id: string, data: { __typename?: 'Post', title?: Maybe<string> } }> } } };

export type PagePartsFragment = { __typename?: 'Page', seo?: Maybe<{ __typename: 'PageSeo', title?: Maybe<string>, description?: Maybe<string> }>, blocks?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHero', headline?: Maybe<string>, text?: Maybe<string>, videoSrc?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHeroActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksFeatures', items?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: Maybe<string>, text?: Maybe<string>, media?: Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: Maybe<string>, videoSrc?: Maybe<string>, cli?: Maybe<boolean> }>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>>> } | { __typename: 'PageBlocksFlying', headline?: Maybe<string>, text?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFlyingActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksPricing', intro?: Maybe<any>, segue?: Maybe<any>, tierOne?: Maybe<{ __typename: 'PageBlocksPricingTierOne', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierOneActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierTwo?: Maybe<{ __typename: 'PageBlocksPricingTierTwo', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierTwoActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierThree?: Maybe<{ __typename: 'PageBlocksPricingTierThree', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierThreeActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierFour?: Maybe<{ __typename: 'PageBlocksPricingTierFour', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierFourActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }> } | { __typename: 'PageBlocksFaq', title?: Maybe<string>, intro?: Maybe<any>, color?: Maybe<string>, questions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFaqQuestions', question?: Maybe<string>, answer?: Maybe<any> }>>> } | { __typename: 'PageBlocksContent', content?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksContentOptions', narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> } | { __typename: 'PageBlocksColumns', columnOne?: Maybe<any>, columnTwo?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksColumnsOptions', columns?: Maybe<string>, narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> }>>> };

export type PostPartsFragment = { __typename?: 'Post', title?: Maybe<string>, date?: Maybe<string>, last_edited?: Maybe<string>, author?: Maybe<string>, body?: Maybe<any>, prev?: Maybe<{ __typename?: 'PostDocument', id: string }>, next?: Maybe<{ __typename?: 'PostDocument', id: string }> };

export type GetPageDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetPageDocumentQuery = { __typename?: 'Query', getPageDocument: { __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', seo?: Maybe<{ __typename: 'PageSeo', title?: Maybe<string>, description?: Maybe<string> }>, blocks?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHero', headline?: Maybe<string>, text?: Maybe<string>, videoSrc?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHeroActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksFeatures', items?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: Maybe<string>, text?: Maybe<string>, media?: Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: Maybe<string>, videoSrc?: Maybe<string>, cli?: Maybe<boolean> }>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>>> } | { __typename: 'PageBlocksFlying', headline?: Maybe<string>, text?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFlyingActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksPricing', intro?: Maybe<any>, segue?: Maybe<any>, tierOne?: Maybe<{ __typename: 'PageBlocksPricingTierOne', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierOneActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierTwo?: Maybe<{ __typename: 'PageBlocksPricingTierTwo', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierTwoActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierThree?: Maybe<{ __typename: 'PageBlocksPricingTierThree', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierThreeActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierFour?: Maybe<{ __typename: 'PageBlocksPricingTierFour', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierFourActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }> } | { __typename: 'PageBlocksFaq', title?: Maybe<string>, intro?: Maybe<any>, color?: Maybe<string>, questions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFaqQuestions', question?: Maybe<string>, answer?: Maybe<any> }>>> } | { __typename: 'PageBlocksContent', content?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksContentOptions', narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> } | { __typename: 'PageBlocksColumns', columnOne?: Maybe<any>, columnTwo?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksColumnsOptions', columns?: Maybe<string>, narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> }>>> } } };

export type GetPageListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPageListQuery = { __typename?: 'Query', getPageList: { __typename?: 'PageConnection', totalCount: number, edges?: Maybe<Array<Maybe<{ __typename?: 'PageConnectionEdges', node?: Maybe<{ __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', seo?: Maybe<{ __typename: 'PageSeo', title?: Maybe<string>, description?: Maybe<string> }>, blocks?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHero', headline?: Maybe<string>, text?: Maybe<string>, videoSrc?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksHeroActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksFeatures', items?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: Maybe<string>, text?: Maybe<string>, media?: Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: Maybe<string>, videoSrc?: Maybe<string>, cli?: Maybe<boolean> }>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>>> } | { __typename: 'PageBlocksFlying', headline?: Maybe<string>, text?: Maybe<string>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFlyingActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> } | { __typename: 'PageBlocksPricing', intro?: Maybe<any>, segue?: Maybe<any>, tierOne?: Maybe<{ __typename: 'PageBlocksPricingTierOne', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierOneActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierTwo?: Maybe<{ __typename: 'PageBlocksPricingTierTwo', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierTwoActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierThree?: Maybe<{ __typename: 'PageBlocksPricingTierThree', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierThreeActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }>, tierFour?: Maybe<{ __typename: 'PageBlocksPricingTierFour', name?: Maybe<string>, price?: Maybe<string>, interval?: Maybe<string>, body?: Maybe<any>, large?: Maybe<boolean>, actions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksPricingTierFourActions', label?: Maybe<string>, icon?: Maybe<boolean>, variant?: Maybe<string>, url?: Maybe<string> }>>> }> } | { __typename: 'PageBlocksFaq', title?: Maybe<string>, intro?: Maybe<any>, color?: Maybe<string>, questions?: Maybe<Array<Maybe<{ __typename: 'PageBlocksFaqQuestions', question?: Maybe<string>, answer?: Maybe<any> }>>> } | { __typename: 'PageBlocksContent', content?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksContentOptions', narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> } | { __typename: 'PageBlocksColumns', columnOne?: Maybe<any>, columnTwo?: Maybe<any>, options?: Maybe<{ __typename: 'PageBlocksColumnsOptions', columns?: Maybe<string>, narrow?: Maybe<boolean>, color?: Maybe<string>, align?: Maybe<string> }> }>>> } }> }>>> } };

export type GetPostDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetPostDocumentQuery = { __typename?: 'Query', getPostDocument: { __typename?: 'PostDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Post', title?: Maybe<string>, date?: Maybe<string>, last_edited?: Maybe<string>, author?: Maybe<string>, body?: Maybe<any>, prev?: Maybe<{ __typename?: 'PostDocument', id: string }>, next?: Maybe<{ __typename?: 'PostDocument', id: string }> } } };

export type GetPostListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPostListQuery = { __typename?: 'Query', getPostList: { __typename?: 'PostConnection', totalCount: number, edges?: Maybe<Array<Maybe<{ __typename?: 'PostConnectionEdges', node?: Maybe<{ __typename?: 'PostDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Post', title?: Maybe<string>, date?: Maybe<string>, last_edited?: Maybe<string>, author?: Maybe<string>, body?: Maybe<any>, prev?: Maybe<{ __typename?: 'PostDocument', id: string }>, next?: Maybe<{ __typename?: 'PostDocument', id: string }> } }> }>>> } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  seo {
    __typename
    title
    description
  }
  blocks {
    __typename
    ... on PageBlocksHero {
      headline
      text
      actions {
        __typename
        label
        icon
        variant
        url
      }
      videoSrc
    }
    ... on PageBlocksFeatures {
      items {
        __typename
        ... on PageBlocksFeaturesItemsFeature {
          headline
          text
          media {
            __typename
            src
            videoSrc
            cli
          }
          actions {
            __typename
            label
            icon
            variant
            url
          }
        }
      }
    }
    ... on PageBlocksFlying {
      headline
      text
      actions {
        __typename
        label
        icon
        variant
        url
      }
    }
    ... on PageBlocksPricing {
      intro
      tierOne {
        __typename
        name
        price
        interval
        body
        large
        actions {
          __typename
          label
          icon
          variant
          url
        }
      }
      segue
      tierTwo {
        __typename
        name
        price
        interval
        body
        large
        actions {
          __typename
          label
          icon
          variant
          url
        }
      }
      tierThree {
        __typename
        name
        price
        interval
        body
        large
        actions {
          __typename
          label
          icon
          variant
          url
        }
      }
      tierFour {
        __typename
        name
        price
        interval
        body
        large
        actions {
          __typename
          label
          icon
          variant
          url
        }
      }
    }
    ... on PageBlocksFaq {
      title
      intro
      questions {
        __typename
        question
        answer
      }
      color
    }
    ... on PageBlocksContent {
      options {
        __typename
        narrow
        color
        align
      }
      content
    }
    ... on PageBlocksColumns {
      options {
        __typename
        columns
        narrow
        color
        align
      }
      columnOne
      columnTwo
    }
  }
}
    `;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  date
  last_edited
  author
  prev {
    ... on Document {
      id
    }
  }
  next {
    ... on Document {
      id
    }
  }
  body
}
    `;
export const GetExpandedPostDocumentDocument = gql`
    query getExpandedPostDocument($relativePath: String!) {
  getPostDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      title
      date
      last_edited
      author
      prev {
        ... on PostDocument {
          id
          data {
            title
          }
        }
      }
      next {
        ... on PostDocument {
          id
          data {
            title
          }
        }
      }
      body
    }
  }
}
    `;
export const GetPageDocumentDocument = gql`
    query getPageDocument($relativePath: String!) {
  getPageDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...PageParts
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const GetPageListDocument = gql`
    query getPageList {
  getPageList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...PageParts
        }
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const GetPostDocumentDocument = gql`
    query getPostDocument($relativePath: String!) {
  getPostDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...PostParts
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const GetPostListDocument = gql`
    query getPostList {
  getPostList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...PostParts
        }
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getExpandedPostDocument(variables: GetExpandedPostDocumentQueryVariables, options?: C): Promise<{data: GetExpandedPostDocumentQuery, variables: GetExpandedPostDocumentQueryVariables, query: string}> {
        return requester<{data: GetExpandedPostDocumentQuery, variables: GetExpandedPostDocumentQueryVariables, query: string}, GetExpandedPostDocumentQueryVariables>(GetExpandedPostDocumentDocument, variables, options);
      },
    getPageDocument(variables: GetPageDocumentQueryVariables, options?: C): Promise<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}> {
        return requester<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}, GetPageDocumentQueryVariables>(GetPageDocumentDocument, variables, options);
      },
    getPageList(variables?: GetPageListQueryVariables, options?: C): Promise<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}> {
        return requester<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}, GetPageListQueryVariables>(GetPageListDocument, variables, options);
      },
    getPostDocument(variables: GetPostDocumentQueryVariables, options?: C): Promise<{data: GetPostDocumentQuery, variables: GetPostDocumentQueryVariables, query: string}> {
        return requester<{data: GetPostDocumentQuery, variables: GetPostDocumentQueryVariables, query: string}, GetPostDocumentQueryVariables>(GetPostDocumentDocument, variables, options);
      },
    getPostList(variables?: GetPostListQueryVariables, options?: C): Promise<{data: GetPostListQuery, variables: GetPostListQueryVariables, query: string}> {
        return requester<{data: GetPostListQuery, variables: GetPostListQueryVariables, query: string}, GetPostListQueryVariables>(GetPostListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

